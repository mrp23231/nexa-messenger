#!/usr/bin/env python3
"""
–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è Nexa Messenger
–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤—Å–µ –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä–∞
"""

import requests
import json
import time
from urllib.parse import urljoin

BASE_URL = "http://localhost:8080"

def print_header():
    """–ü–µ—á–∞—Ç–∞–µ—Ç –∑–∞–≥–æ–ª–æ–≤–æ–∫ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏"""
    print("üåü" + "="*50 + "üåü")
    print("üöÄ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø NEXA MESSENGER")
    print("üåü" + "="*50 + "üåü")
    print()

def test_basic_functionality():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –±–∞–∑–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å"""
    print("üì± –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∞–∑–æ–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
    try:
        response = requests.get(BASE_URL)
        if response.status_code == 200:
            print("‚úÖ –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç")
        else:
            print(f"‚ö†Ô∏è –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –≤–µ—Ä–Ω—É–ª–∞ –∫–æ–¥: {response.status_code}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã: {e}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
    try:
        response = requests.get(f"{BASE_URL}/register")
        if response.status_code == 200:
            print("‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç")
        else:
            print(f"‚ö†Ô∏è –°—Ç—Ä–∞–Ω–∏—Ü–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤–µ—Ä–Ω—É–ª–∞ –∫–æ–¥: {response.status_code}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {e}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤—Ö–æ–¥–∞
    try:
        response = requests.get(f"{BASE_URL}/login")
        if response.status_code == 200:
            print("‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –≤—Ö–æ–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç")
        else:
            print(f"‚ö†Ô∏è –°—Ç—Ä–∞–Ω–∏—Ü–∞ –≤—Ö–æ–¥–∞ –≤–µ—Ä–Ω—É–ª–∞ –∫–æ–¥: {response.status_code}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –≤—Ö–æ–¥–∞: {e}")

def test_registration_flow():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏"""
    print("\nüîê –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Ü–µ—Å—Å–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏...")
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    test_users = [
        {"username": "demo_user", "email": "demo@nexa.com", "password": "demo123"},
        {"username": "test_user", "email": "test@nexa.com", "password": "test123"},
        {"username": "nexa_fan", "email": "fan@nexa.com", "password": "fan123"}
    ]
    
    for i, user_data in enumerate(test_users, 1):
        try:
            print(f"  –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {i}: {user_data['username']}")
            response = requests.post(f"{BASE_URL}/register", data=user_data)
            
            if response.status_code == 200:
                print(f"    ‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_data['username']} –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω")
            elif response.status_code == 302:
                print(f"    ‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_data['username']} –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω (—Ä–µ–¥–∏—Ä–µ–∫—Ç)")
            else:
                print(f"    ‚ö†Ô∏è –ö–æ–¥ –æ—Ç–≤–µ—Ç–∞: {response.status_code}")
                
        except Exception as e:
            print(f"    ‚ùå –û—à–∏–±–∫–∞: {e}")

def test_search_functionality():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –ø–æ–∏—Å–∫–∞"""
    print("\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –ø–æ–∏—Å–∫–∞...")
    
    # –°–Ω–∞—á–∞–ª–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –ø–æ–∏—Å–∫–∞
    test_user = {"username": "search_test", "email": "search@nexa.com", "password": "search123"}
    
    try:
        # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        requests.post(f"{BASE_URL}/register", data=test_user)
        print("‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–ª—è –ø–æ–∏—Å–∫–∞ —Å–æ–∑–¥–∞–Ω")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–∏—Å–∫ (–¥–æ–ª–∂–µ–Ω –≤–µ—Ä–Ω—É—Ç—å —Ä–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞ –ª–æ–≥–∏–Ω, —Ç–∞–∫ –∫–∞–∫ –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã)
        response = requests.get(f"{BASE_URL}/search_users?q=search")
        if response.status_code == 302:
            print("‚úÖ API –ø–æ–∏—Å–∫–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç (—Ç—Ä–µ–±—É–µ—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é)")
        else:
            print(f"‚ö†Ô∏è API –ø–æ–∏—Å–∫–∞ –≤–µ—Ä–Ω—É–ª –∫–æ–¥: {response.status_code}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–∏—Å–∫–∞: {e}")

def test_chat_pages():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã —á–∞—Ç–∞"""
    print("\nüí¨ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü —á–∞—Ç–∞...")
    
    pages = [
        ("/chat", "–°—Ç—Ä–∞–Ω–∏—Ü–∞ —á–∞—Ç–∞"),
        ("/profile", "–°—Ç—Ä–∞–Ω–∏—Ü–∞ –ø—Ä–æ—Ñ–∏–ª—è"),
        ("/profile/edit", "–°—Ç—Ä–∞–Ω–∏—Ü–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è")
    ]
    
    for page, description in pages:
        try:
            response = requests.get(f"{BASE_URL}{page}")
            if response.status_code == 302:
                print(f"‚úÖ {description} —Ä–∞–±–æ—Ç–∞–µ—Ç (—Ç—Ä–µ–±—É–µ—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é)")
            elif response.status_code == 200:
                print(f"‚úÖ {description} –¥–æ—Å—Ç—É–ø–Ω–∞")
            else:
                print(f"‚ö†Ô∏è {description} –≤–µ—Ä–Ω—É–ª –∫–æ–¥: {response.status_code}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ {description}: {e}")

def show_demo_instructions():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏"""
    print("\n" + "="*60)
    print("üéÆ –ò–ù–°–¢–†–£–ö–¶–ò–ò –ü–û –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–ò")
    print("="*60)
    print()
    print("1Ô∏è‚É£ –û–¢–ö–†–û–ô–¢–ï –ë–†–ê–£–ó–ï–†:")
    print("   üåê http://localhost:8080")
    print()
    print("2Ô∏è‚É£ –ü–†–û–¢–ï–°–¢–ò–†–£–ô–¢–ï –†–ï–ì–ò–°–¢–†–ê–¶–ò–Æ:")
    print("   ‚Ä¢ –ù–∞–∂–º–∏—Ç–µ '–°–æ–∑–¥–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç'")
    print("   ‚Ä¢ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å 'admin' (–¥–æ–ª–∂–Ω–æ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤—ã)")
    print("   ‚Ä¢ –í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç")
    print()
    print("3Ô∏è‚É£ –ü–†–û–¢–ï–°–¢–ò–†–£–ô–¢–ï –í–•–û–î:")
    print("   ‚Ä¢ –í–æ–π–¥–∏—Ç–µ –≤ —Å–æ–∑–¥–∞–Ω–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç")
    print("   ‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —á—Ç–æ –ø–æ–ø–∞–ª–∏ –≤ —á–∞—Ç")
    print()
    print("4Ô∏è‚É£ –ü–†–û–¢–ï–°–¢–ò–†–£–ô–¢–ï –ü–û–ò–°–ö:")
    print("   ‚Ä¢ –í–≤–µ–¥–∏—Ç–µ –≤ –ø–æ–∏—Å–∫ —á–∞—Å—Ç—å –∏–º–µ–Ω–∏")
    print("   ‚Ä¢ –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –ø–æ–∏—Å–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç")
    print()
    print("5Ô∏è‚É£ –ü–†–û–¢–ï–°–¢–ò–†–£–ô–¢–ï –ß–ê–¢:")
    print("   ‚Ä¢ –°–æ–∑–¥–∞–π—Ç–µ –≤—Ç–æ—Ä–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –¥—Ä—É–≥–æ–º –æ–∫–Ω–µ")
    print("   ‚Ä¢ –ù–∞—á–Ω–∏—Ç–µ –ø–µ—Ä–µ–ø–∏—Å–∫—É –º–µ–∂–¥—É –Ω–∏–º–∏")
    print("   ‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä '–ø–µ—á–∞—Ç–∞–µ—Ç'")
    print()
    print("üåü –í–°–ï –§–£–ù–ö–¶–ò–ò –†–ê–ë–û–¢–ê–Æ–¢ –í –†–ï–ê–õ–¨–ù–û–ú –í–†–ï–ú–ï–ù–ò!")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏"""
    print_header()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –±–∞–∑–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å
    test_basic_functionality()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ—Ü–µ—Å—Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
    test_registration_flow()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –ø–æ–∏—Å–∫–∞
    test_search_functionality()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—ã —á–∞—Ç–∞
    test_chat_pages()
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
    show_demo_instructions()
    
    print("\n" + "="*60)
    print("üéâ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê!")
    print("="*60)
    print("\nüí° –¢–µ–ø–µ—Ä—å –æ—Ç–∫—Ä–æ–π—Ç–µ –±—Ä–∞—É–∑–µ—Ä –∏ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏!")

if __name__ == "__main__":
    main()

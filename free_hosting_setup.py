#!/usr/bin/env python3
"""
–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–µ—Å–ø–ª–∞—Ç–Ω–æ–≥–æ —Ö–æ—Å—Ç–∏–Ω–≥–∞ –¥–ª—è Nexa Messenger
"""

import os
import sys
import subprocess
import json

def show_free_hosting_options():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã —Ö–æ—Å—Ç–∏–Ω–≥–∞"""
    print("üåê –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã —Ö–æ—Å—Ç–∏–Ω–≥–∞ Nexa Messenger")
    print("=" * 60)
    
    options = [
        {
            "name": "üöÄ Ngrok (–°–∞–º—ã–π –ø—Ä–æ—Å—Ç–æ–π)",
            "description": "–°–æ–∑–¥–∞–µ—Ç —Ç—É–Ω–Ω–µ–ª—å –∫ –≤–∞—à–µ–º—É –∫–æ–º–ø—å—é—Ç–µ—Ä—É",
            "pros": ["–ú–≥–Ω–æ–≤–µ–Ω–Ω–æ", "–ë–µ—Å–ø–ª–∞—Ç–Ω–æ", "–ü—Ä–æ—Å—Ç–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞"],
            "cons": ["URL –º–µ–Ω—è–µ—Ç—Å—è –ø—Ä–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–µ", "–¢—Ä–µ–±—É–µ—Ç –∑–∞–ø—É—â–µ–Ω–Ω—ã–π –∫–æ–º–ø—å—é—Ç–µ—Ä"],
            "setup": "python setup_ngrok.py"
        },
        {
            "name": "‚òÅÔ∏è Render (–û–±–ª–∞—á–Ω—ã–π —Ö–æ—Å—Ç–∏–Ω–≥)",
            "description": "–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π —Ö–æ—Å—Ç–∏–Ω–≥ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π",
            "pros": ["–ü–æ—Å—Ç–æ—è–Ω–Ω—ã–π URL", "–ê–≤—Ç–æ–∑–∞–ø—É—Å–∫", "SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç"],
            "cons": ["–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –±–µ—Å–ø–ª–∞—Ç–Ω–æ–≥–æ –ø–ª–∞–Ω–∞", "–¢—Ä–µ–±—É–µ—Ç GitHub"],
            "setup": "–°–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º –≤ DEPLOYMENT_README.md"
        },
        {
            "name": "üåä Railway (–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ö–æ—Å—Ç–∏–Ω–≥)",
            "description": "–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞ –¥–ª—è —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π",
            "pros": ["–ü—Ä–æ—Å—Ç–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞", "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –¥–µ–ø–ª–æ–π", "SSL"],
            "cons": ["–û–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–µ –≤—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã", "–¢—Ä–µ–±—É–µ—Ç GitHub"],
            "setup": "–°–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º –≤ DEPLOYMENT_README.md"
        },
        {
            "name": "üêò Heroku (–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π –≤—ã–±–æ—Ä)",
            "description": "–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞ –¥–ª—è –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π",
            "pros": ["–ù–∞–¥–µ–∂–Ω–æ—Å—Ç—å", "–ú–Ω–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏", "–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏"],
            "cons": ["–£–±—Ä–∞–ª–∏ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –ø–ª–∞–Ω", "–¢—Ä–µ–±—É–µ—Ç –∫–∞—Ä—Ç—É"],
            "setup": "–°–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º –≤ DEPLOYMENT_README.md"
        }
    ]
    
    for i, option in enumerate(options, 1):
        print(f"\n{i}. {option['name']}")
        print(f"   {option['description']}")
        print(f"   ‚úÖ –ü–ª—é—Å—ã: {', '.join(option['pros'])}")
        print(f"   ‚ùå –ú–∏–Ω—É—Å—ã: {', '.join(option['cons'])}")
        print(f"   üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞: {option['setup']}")
    
    return options

def setup_ngrok_quick():
    """–ë—ã—Å—Ç—Ä–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ Ngrok"""
    print("\nüöÄ –ë—ã—Å—Ç—Ä–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ Ngrok...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–ø—É—â–µ–Ω –ª–∏ —Å–µ—Ä–≤–µ—Ä
    try:
        import requests
        response = requests.get('http://localhost:8080', timeout=5)
        if response.status_code != 200:
            print("‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 8080")
            print("   –°–Ω–∞—á–∞–ª–∞ –∑–∞–ø—É—Å—Ç–∏—Ç–µ: python start_server.py")
            return False
    except:
        print("‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 8080")
        print("   –°–Ω–∞—á–∞–ª–∞ –∑–∞–ø—É—Å—Ç–∏—Ç–µ: python start_server.py")
        return False
    
    print("‚úÖ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º ngrok
    try:
        result = subprocess.run(['ngrok', 'version'], capture_output=True, text=True)
        if result.returncode == 0:
            print("‚úÖ Ngrok —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        else:
            print("‚ùå Ngrok –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
            print("   –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python setup_ngrok.py")
            return False
    except FileNotFoundError:
        print("‚ùå Ngrok –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        print("   –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python setup_ngrok.py")
        return False
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç—É–Ω–Ω–µ–ª—å
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç—É–Ω–Ω–µ–ª—è...")
    try:
        process = subprocess.Popen(['ngrok', 'http', '8080'], 
                                 stdout=subprocess.PIPE,
                                 stderr=subprocess.PIPE)
        
        import time
        time.sleep(3)
        
        # –ü–æ–ª—É—á–∞–µ–º URL
        response = requests.get('http://localhost:4040/api/tunnels', timeout=5)
        if response.status_code == 200:
            tunnels = response.json()['tunnels']
            if tunnels:
                public_url = tunnels[0]['public_url']
                print(f"‚úÖ –¢—É–Ω–Ω–µ–ª—å –∑–∞–ø—É—â–µ–Ω!")
                print(f"üåê –ü—É–±–ª–∏—á–Ω—ã–π URL: {public_url}")
                print(f"üì± –¢–µ–ø–µ—Ä—å –≤—Å–µ –º–æ–≥—É—Ç –∑–∞–π—Ç–∏ –ø–æ –∞–¥—Ä–µ—Å—É: {public_url}")
                
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º URL
                with open('public_url.txt', 'w') as f:
                    f.write(public_url)
                
                return True
        
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å —Ç—É–Ω–Ω–µ–ª—å")
        process.terminate()
        return False
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def create_deployment_files():
    """–°–æ–∑–¥–∞–µ—Ç —Ñ–∞–π–ª—ã –¥–ª—è —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è"""
    print("\nüìÅ –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –¥–ª—è —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è...")
    
    # Procfile –¥–ª—è Heroku
    with open('Procfile', 'w') as f:
        f.write('web: gunicorn app:app')
    
    # runtime.txt –¥–ª—è Python –≤–µ—Ä—Å–∏–∏
    with open('runtime.txt', 'w') as f:
        f.write('python-3.9.18')
    
    # requirements.txt —É–∂–µ –µ—Å—Ç—å
    
    print("‚úÖ –§–∞–π–ª—ã –¥–ª—è —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è —Å–æ–∑–¥–∞–Ω—ã:")
    print("   ‚Ä¢ Procfile")
    print("   ‚Ä¢ runtime.txt")
    print("   ‚Ä¢ requirements.txt")

def show_github_setup():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ GitHub"""
    print("\nüìö –ù–∞—Å—Ç—Ä–æ–π–∫–∞ GitHub –¥–ª—è –±–µ—Å–ø–ª–∞—Ç–Ω–æ–≥–æ —Ö–æ—Å—Ç–∏–Ω–≥–∞:")
    print("1. –°–æ–∑–¥–∞–π—Ç–µ –∞–∫–∫–∞—É–Ω—Ç –Ω–∞ GitHub.com (–±–µ—Å–ø–ª–∞—Ç–Ω–æ)")
    print("2. –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π")
    print("3. –ó–∞–≥—Ä—É–∑–∏—Ç–µ –∫–æ–¥:")
    print("   git init")
    print("   git add .")
    print("   git commit -m 'Initial commit'")
    print("   git remote add origin https://github.com/username/repo.git")
    print("   git push -u origin main")
    print("4. –ü–æ–¥–∫–ª—é—á–∏—Ç–µ –∫ –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É —Ö–æ—Å—Ç–∏–Ω–≥—É")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üåê –ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏—è Nexa Messenger")
    print("=" * 60)
    
    while True:
        print("\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:")
        print("1. –ü–æ–∫–∞–∑–∞—Ç—å –≤–∞—Ä–∏–∞–Ω—Ç—ã –±–µ—Å–ø–ª–∞—Ç–Ω–æ–≥–æ —Ö–æ—Å—Ç–∏–Ω–≥–∞")
        print("2. –ë—ã—Å—Ç—Ä–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ Ngrok")
        print("3. –°–æ–∑–¥–∞—Ç—å —Ñ–∞–π–ª—ã –¥–ª—è —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è")
        print("4. –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ GitHub")
        print("5. –í—ã—Ö–æ–¥")
        
        choice = input("\n–í–∞—à –≤—ã–±–æ—Ä (1-5): ").strip()
        
        if choice == '1':
            show_free_hosting_options()
        elif choice == '2':
            setup_ngrok_quick()
        elif choice == '3':
            create_deployment_files()
        elif choice == '4':
            show_github_setup()
        elif choice == '5':
            print("üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
            break
        else:
            print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")

if __name__ == '__main__':
    main()

#!/usr/bin/env python3
"""
–ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏—è Nexa Messenger —á–µ—Ä–µ–∑ Ngrok
"""

import os
import sys
import subprocess
import time
import requests
import json

def install_ngrok():
    """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç Ngrok"""
    print("üîß –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Ngrok –¥–ª—è –±–µ—Å–ø–ª–∞—Ç–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞...")
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ª–∏ —É–∂–µ ngrok
        result = subprocess.run(['ngrok', 'version'], capture_output=True, text=True)
        if result.returncode == 0:
            print("‚úÖ Ngrok —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")
            return True
    except FileNotFoundError:
        pass
    
    print("üì• –°–∫–∞—á–∏–≤–∞–Ω–∏–µ Ngrok...")
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º OS
    import platform
    system = platform.system().lower()
    machine = platform.machine().lower()
    
    if system == "darwin":  # macOS
        if "arm" in machine or "aarch64" in machine:
            url = "https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-darwin-arm64.tgz"
        else:
            url = "https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-darwin-amd64.tgz"
    elif system == "linux":
        if "arm" in machine or "aarch64" in machine:
            url = "https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-linux-arm64.tgz"
        else:
            url = "https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-linux-amd64.tgz"
    elif system == "windows":
        url = "https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-windows-amd64.zip"
    else:
        print("‚ùå –ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º–∞—è –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞")
        return False
    
    try:
        # –°–∫–∞—á–∏–≤–∞–µ–º ngrok
        print(f"üì• –°–∫–∞—á–∏–≤–∞–Ω–∏–µ —Å {url}")
        
        if system == "windows":
            subprocess.run(['curl', '-L', url, '-o', 'ngrok.zip'], check=True)
            subprocess.run(['unzip', 'ngrok.zip'], check=True)
            os.remove('ngrok.zip')
        else:
            subprocess.run(['curl', '-L', url, '-o', 'ngrok.tgz'], check=True)
            subprocess.run(['tar', '-xzf', 'ngrok.tgz'], check=True)
            os.remove('ngrok.tgz')
        
        # –î–µ–ª–∞–µ–º –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–º
        if system != "windows":
            subprocess.run(['chmod', '+x', 'ngrok'], check=True)
        
        print("‚úÖ Ngrok —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏: {e}")
        return False

def setup_ngrok_account():
    """–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –∞–∫–∫–∞—É–Ω—Ç Ngrok"""
    print("\nüîë –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–∫–∫–∞—É–Ω—Ç–∞ Ngrok...")
    print("üìã –î–ª—è –±–µ—Å–ø–ª–∞—Ç–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:")
    print("   1. –ó–∞–π–¥–∏—Ç–µ –Ω–∞ https://ngrok.com/signup")
    print("   2. –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å (–±–µ—Å–ø–ª–∞—Ç–Ω–æ)")
    print("   3. –ü–æ–ª—É—á–∏—Ç–µ authtoken")
    print("   4. –í–≤–µ–¥–∏—Ç–µ –µ–≥–æ –Ω–∏–∂–µ")
    
    authtoken = input("\n–í–≤–µ–¥–∏—Ç–µ –≤–∞—à authtoken: ").strip()
    
    if not authtoken:
        print("‚ùå Authtoken –Ω–µ –≤–≤–µ–¥–µ–Ω")
        return False
    
    try:
        # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º ngrok
        subprocess.run(['./ngrok', 'config', 'add-authtoken', authtoken], check=True)
        print("‚úÖ Ngrok –Ω–∞—Å—Ç—Ä–æ–µ–Ω!")
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏: {e}")
        return False

def start_ngrok_tunnel():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç —Ç—É–Ω–Ω–µ–ª—å Ngrok"""
    print("\nüöÄ –ó–∞–ø—É—Å–∫ —Ç—É–Ω–Ω–µ–ª—è Ngrok...")
    
    try:
        # –ó–∞–ø—É—Å–∫–∞–µ–º ngrok –≤ —Ñ–æ–Ω–µ
        process = subprocess.Popen(['./ngrok', 'http', '8080'], 
                                 stdout=subprocess.PIPE,
                                 stderr=subprocess.PIPE)
        
        # –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞
        time.sleep(3)
        
        # –ü–æ–ª—É—á–∞–µ–º URL —Ç—É–Ω–Ω–µ–ª—è
        try:
            response = requests.get('http://localhost:4040/api/tunnels', timeout=5)
            if response.status_code == 200:
                tunnels = response.json()['tunnels']
                if tunnels:
                    public_url = tunnels[0]['public_url']
                    print(f"‚úÖ –¢—É–Ω–Ω–µ–ª—å –∑–∞–ø—É—â–µ–Ω!")
                    print(f"üåê –ü—É–±–ª–∏—á–Ω—ã–π URL: {public_url}")
                    print(f"üîó –õ–æ–∫–∞–ª—å–Ω—ã–π URL: http://localhost:8080")
                    print(f"\nüì± –¢–µ–ø–µ—Ä—å –≤—Å–µ –º–æ–≥—É—Ç –∑–∞–π—Ç–∏ –ø–æ –∞–¥—Ä–µ—Å—É: {public_url}")
                    print(f"\n‚èπÔ∏è  –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C")
                    
                    # –°–æ—Ö—Ä–∞–Ω—è–µ–º URL –≤ —Ñ–∞–π–ª
                    with open('public_url.txt', 'w') as f:
                        f.write(public_url)
                    
                    return process, public_url
                else:
                    print("‚ùå –¢—É–Ω–Ω–µ–ª—å –Ω–µ —Å–æ–∑–¥–∞–Ω")
                    process.terminate()
                    return None, None
            else:
                print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç—É–Ω–Ω–µ–ª–µ")
                process.terminate()
                return None, None
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è URL: {e}")
            process.terminate()
            return None, None
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Ç—É–Ω–Ω–µ–ª—è: {e}")
        return None, None

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üåê –ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏—è Nexa Messenger")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–ø—É—â–µ–Ω –ª–∏ —Å–µ—Ä–≤–µ—Ä
    try:
        response = requests.get('http://localhost:8080', timeout=5)
        if response.status_code != 200:
            print("‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 8080")
            print("   –°–Ω–∞—á–∞–ª–∞ –∑–∞–ø—É—Å—Ç–∏—Ç–µ: python start_server.py")
            return
    except:
        print("‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 8080")
        print("   –°–Ω–∞—á–∞–ª–∞ –∑–∞–ø—É—Å—Ç–∏—Ç–µ: python start_server.py")
        return
    
    print("‚úÖ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 8080")
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º ngrok
    if not install_ngrok():
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Ngrok")
        return
    
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∞–∫–∫–∞—É–Ω—Ç
    if not setup_ngrok_account():
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å Ngrok")
        return
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç—É–Ω–Ω–µ–ª—å
    process, public_url = start_ngrok_tunnel()
    if not process:
        return
    
    try:
        # –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
        process.wait()
    except KeyboardInterrupt:
        print("\n\nüõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç—É–Ω–Ω–µ–ª—è...")
        process.terminate()
        print("‚úÖ –¢—É–Ω–Ω–µ–ª—å –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        
        # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
        if os.path.exists('public_url.txt'):
            os.remove('public_url.txt')

if __name__ == '__main__':
    main()

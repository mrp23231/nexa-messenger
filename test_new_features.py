#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–æ–≤—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π Nexa Messenger
"""

import requests
import json
from datetime import datetime

BASE_URL = "http://localhost:8080"

def test_connection_info():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç API –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏"""
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏...")
    
    try:
        response = requests.get(f"{BASE_URL}/api/connection_info")
        if response.status_code == 401:
            print("‚úÖ API —Ä–∞–±–æ—Ç–∞–µ—Ç (—Ç—Ä–µ–±—É–µ—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏)")
        else:
            print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å: {response.status_code}")
    except requests.exceptions.ConnectionError:
        print("‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω")
        return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False
    
    return True

def test_backup_api():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç API –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏"""
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è...")
    
    try:
        response = requests.post(f"{BASE_URL}/api/backup")
        if response.status_code == 401:
            print("‚úÖ API —Ä–∞–±–æ—Ç–∞–µ—Ç (—Ç—Ä–µ–±—É–µ—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏)")
        else:
            print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å: {response.status_code}")
    except requests.exceptions.ConnectionError:
        print("‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω")
        return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False
    
    return True

def test_tips_api():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç API –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–¥—Å–∫–∞–∑–æ–∫"""
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API –ø–æ–¥—Å–∫–∞–∑–æ–∫...")
    
    try:
        response = requests.get(f"{BASE_URL}/api/tips")
        if response.status_code == 200:
            tips = response.json()
            print("‚úÖ API –ø–æ–¥—Å–∫–∞–∑–æ–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç")
            print(f"   - –ü–æ–¥—Å–∫–∞–∑–æ–∫ –ø–æ —á–∞—Ç—É: {len(tips.get('chat', []))}")
            print(f"   - –ü–æ–¥—Å–∫–∞–∑–æ–∫ –ø–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏: {len(tips.get('security', []))}")
            print(f"   - –ü–æ–¥—Å–∫–∞–∑–æ–∫ –ø–æ —Ñ—É–Ω–∫—Ü–∏—è–º: {len(tips.get('features', []))}")
        else:
            print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å: {response.status_code}")
    except requests.exceptions.ConnectionError:
        print("‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω")
        return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False
    
    return True

def test_pages():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –æ—Å–Ω–æ–≤–Ω—ã—Ö —Å—Ç—Ä–∞–Ω–∏—Ü"""
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å—Ç—Ä–∞–Ω–∏—Ü...")
    
    pages = [
        ("/", "–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞"),
        ("/login", "–°—Ç—Ä–∞–Ω–∏—Ü–∞ –≤—Ö–æ–¥–∞"),
        ("/register", "–°—Ç—Ä–∞–Ω–∏—Ü–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏"),
        ("/help", "–°—Ç—Ä–∞–Ω–∏—Ü–∞ –ø–æ–º–æ—â–∏")
    ]
    
    for page, name in pages:
        try:
            response = requests.get(f"{BASE_URL}{page}")
            if response.status_code == 200:
                print(f"‚úÖ {name}: –¥–æ—Å—Ç—É–ø–Ω–∞")
            else:
                print(f"‚ùå {name}: —Å—Ç–∞—Ç—É—Å {response.status_code}")
        except requests.exceptions.ConnectionError:
            print(f"‚ùå {name}: —Å–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω")
            return False
        except Exception as e:
            print(f"‚ùå {name}: –æ—à–∏–±–∫–∞ {e}")
    
    return True

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π Nexa Messenger")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–ø—É—â–µ–Ω –ª–∏ —Å–µ—Ä–≤–µ—Ä
    try:
        response = requests.get(f"{BASE_URL}/")
        if response.status_code != 200:
            print("‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
            return
    except:
        print("‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω. –ó–∞–ø—É—Å—Ç–∏—Ç–µ app.py")
        return
    
    print("‚úÖ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –∏ –æ—Ç–≤–µ—á–∞–µ—Ç")
    print()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º API
    test_connection_info()
    print()
    
    test_backup_api()
    print()
    
    test_tips_api()
    print()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    test_pages()
    print()
    
    print("üéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    print("\nüì± –î–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:")
    print("1. –û—Ç–∫—Ä–æ–π—Ç–µ http://localhost:8080 –≤ –±—Ä–∞—É–∑–µ—Ä–µ")
    print("2. –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
    print("3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è (display_name)")
    print("4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏")
    print("5. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏")

if __name__ == "__main__":
    main()
